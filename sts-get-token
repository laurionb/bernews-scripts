#!/usr/bin/python
import argparse
import boto
import getpass
import os
import sys

parser = argparse.ArgumentParser(description='Get IAM token')
parser.add_argument('--aws-access-key', metavar='KEY', help='AWS Access Key ID. Defaults to the value of the AWS_ACCESS_KEY environment variable (if set).')
parser.add_argument('--aws-secret-key', metavar='KEY', help='AWS Secret Access Key. Defaults to the value of the AWS_SECRET_KEY environment variable (if set).')
args = parser.parse_args()

access_key = args.aws_access_key or os.environ['AWS_ACCESS_KEY']
secret_key = args.aws_secret_key or os.environ['AWS_SECRET_KEY']

iam = boto.connect_iam(access_key, secret_key)
response = iam.get_user()
user = response['get_user_response']['get_user_result']['user']['user_name']
response = iam.get_all_mfa_devices(user)
mfa_serial_number = response['list_mfa_devices_response']['list_mfa_devices_result']['mfa_devices'][0]['serial_number']

print 'Enter the MFA token for MFA device ' + mfa_serial_number + ' (user: ' + user + ')'
mfa_token = getpass.getpass()

sts = boto.connect_sts(access_key, secret_key)
token = sts.get_session_token(duration = 3600, force_new = True, mfa_serial_number = mfa_serial_number, mfa_token = mfa_token)

print 'export AWS_ACCESS_KEY=' + token.access_key
print 'export AWS_SECRET_KEY=' + token.secret_key
print 'export AWS_DELEGATION_TOKEN=' + token.session_token
