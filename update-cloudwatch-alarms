#!/usr/bin/python
import boto
import os
import string
import sys

if (None <> os.environ.get('AWS_DELEGATION_TOKEN')):
    cw = boto.connect_cloudwatch(os.environ['AWS_ACCESS_KEY'], os.environ['AWS_SECRET_KEY'], security_token = os.environ['AWS_DELEGATION_TOKEN'])
else:
    cw = boto.connect_cloudwatch(os.environ['AWS_ACCESS_KEY'], os.environ['AWS_SECRET_KEY'])

comp_map = { '>': 'GreaterThanThreshold', '<': 'LessThanThreshold', '<=': 'LessThanThreshold', '>=': 'GreaterThanOrEqualToThreshold' }

old = sys.argv[1]
new = sys.argv[2]

def update_dimensions(dimensions, old, new):
    for (k, v) in dimensions.items():
        if isinstance(v,list):
            if -1 != string.find(v[0], old):
                dimensions[k][0] = string.replace(v[0], old, new)
                return True
        elif -1 != string.find(v, old):
                dimensions[k] = string.replace(v, old, new)
                return True
    return False

for x in cw.describe_alarms():
    if update_dimensions(x.dimensions, old, new):
        print 'Updating %s (%s}' % (x, x.dimensions)
        x.comparison = comp_map[x.comparison]
        cw.create_alarm(x)
